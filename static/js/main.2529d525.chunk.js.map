{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Feedback/Feedback.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/Feedback/Feedback.js","App.js","index.js"],"names":["module","exports","Section","title","children","FeedbackOptions","options","handleIncrement","element","map","option","className","css","button","name","onClick","type","section_button","Notification","message","text","Statistics","Good","Bad","Neutral","Total","positivePercentage","Feedback","state","good","neutral","bad","event","target","setState","prevState","countTotalFeedback","toFixed","container","Object","keys","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,2B,iBCAzBD,EAAOC,QAAU,CAAC,eAAiB,wCAAwC,OAAS,kC,oBCApFD,EAAOC,QAAU,CAAC,UAAY,8B,gBCA9BD,EAAOC,QAAU,CAAC,KAAO,6B,6LCEV,SAASC,EAAT,GAAqC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACpC,OACI,oCACI,6BAAKD,IACJC,K,oBCFE,SAASC,EAAT,GAAqD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,gBAExCC,EAAUF,EAAQG,KAAI,SAAAC,GAAM,OAC9B,wBAAQC,UAAWC,IAAIC,OAEvBC,KAAMJ,EACNK,QAASR,EACTS,KAAK,SAJL,SAKKN,GAJAA,MAOb,OAEI,yBAASC,UAAWC,IAAIK,eAAxB,SACKT,I,qBCdM,SAASU,EAAT,GAAkC,IAAXC,EAAU,EAAVA,QAClC,OACI,8BACI,mBAAGR,UAAWC,IAAIQ,KAAlB,SAAyBD,M,oBCDtB,SAASE,EAAT,GAAsE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,IAAKC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBAC3D,OAAGD,EAEC,gCACI,oBAAGd,UAAWC,IAAIQ,KAAlB,mBAA+BE,KAC/B,oBAAGX,UAAWC,IAAIQ,KAAlB,sBAAkCI,KAClC,oBAAGb,UAAWC,IAAIQ,KAAlB,kBAA8BG,KAC9B,oBAAGZ,UAAWC,IAAIQ,KAAlB,oBAAgCK,KAChC,oBAAGd,UAAWC,IAAIQ,KAAlB,gCAA4CM,EAA5C,WAIG,cAACR,EAAD,CAAcC,QAAQ,yB,ICV/BQ,E,4MAEFC,MAAQ,CACJC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPxB,gBAAkB,SAAAyB,GACd,IAAOlB,EAAQkB,EAAMC,OAAdnB,KACP,EAAKoB,UAAS,SAAAC,GACV,OAAO,eACFrB,EAAOqB,EAAUrB,GAAQ,O,EAuBtCsB,mBAAqB,WACpB,OAAO,EAAKR,MAAMG,IAAM,EAAKH,MAAMC,KAAO,EAAKD,MAAME,S,EAGtDJ,mBAAqB,WACnB,OAAG,EAAKU,sBACI,EAAKR,MAAMC,KAAO,EAAKO,qBAAuB,KAAMC,UAErD,G,4CAKf,WACI,OACE,sBAAK1B,UAAWC,IAAI0B,UAApB,UACE,cAACpC,EAAD,CAASC,MAAO,wBAAhB,SACA,cAACE,EAAD,CACAC,QAASiC,OAAOC,KAAKC,KAAKb,OAC1BrB,gBAAiBkC,KAAKlC,oBAItB,cAACL,EAAD,CAASC,MAAO,aAAhB,SACA,cAACkB,EAAD,CACAC,KAAMmB,KAAKb,MAAMC,KACjBL,QAASiB,KAAKb,MAAME,QACpBP,IAAKkB,KAAKb,MAAMG,IAChBN,MAAOgB,KAAKL,qBACZV,mBAAoBe,KAAKf,gC,GAhEdgB,aA0ERf,ICtEAgB,MATf,WACE,OACE,qBAAKhC,UAAU,MAAf,SAEE,cAAC,EAAD,OCHNiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2529d525.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Statistics_text__2GORu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section_button\":\"FeedbackOptions_section_button__3jQUW\",\"button\":\"FeedbackOptions_button__1ItGi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Feedback_container__V86TM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__3CK32\"};","\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Section({title, children}) {\r\n    return (\r\n        <section>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired\r\n};","import PropTypes from 'prop-types';\r\nimport css from './FeedbackOptions.module.css'\r\n\r\n\r\n\r\nexport default function FeedbackOptions({options, handleIncrement}){\r\n\r\n    const element = options.map(option => (\r\n        <button className={css.button}\r\n        key={option}\r\n        name={option}\r\n        onClick={handleIncrement}\r\n        type=\"button\">\r\n            {option}\r\n        </button>\r\n    ))\r\nreturn (\r\n   \r\n    <section className={css.section_button}>\r\n        {element}\r\n    </section>\r\n)\r\n\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    handleIncrement: PropTypes.func.isRequired,\r\n  };","import PropTypes from 'prop-types';\r\n\r\nimport css from './Notification.module.css'\r\n\r\n\r\nexport default function Notification({message}) {\r\n    return (\r\n        <div>\r\n            <p className={css.text}>{message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n}","import PropTypes from 'prop-types';\r\n\r\nimport Notification from '../Notification/Notification'\r\nimport css from './Statistics.module.css'\r\n\r\n\r\n\r\nexport default function Statistics({Good, Bad, Neutral, Total, positivePercentage}) {\r\n    if(Total) {\r\n    return(\r\n        <div>\r\n            <p className={css.text}>Good: {Good}</p>\r\n            <p className={css.text}>Neutral: {Neutral}</p>\r\n            <p className={css.text}>Bad: {Bad}</p>\r\n            <p className={css.text}>Total: {Total}</p>\r\n            <p className={css.text}>Positive feedback: {positivePercentage} %</p>\r\n        </div>\r\n    )\r\n    } else {\r\n        return <Notification message='There is no feedback' />\r\n    }\r\n}\r\n\r\nStatistics.propTypes = {\r\n    Good: PropTypes.number,\r\n    Neutral: PropTypes.number,\r\n    Bad: PropTypes.number,\r\n    Total: PropTypes.number,\r\n}","\r\nimport { Component } from \"react\";\r\nimport css from './Feedback.module.css'\r\nimport Section from '../Section/Section'\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions'\r\nimport Statistics from '../Statistics/Statistics';\r\n\r\n\r\n\r\nclass Feedback extends Component {\r\n\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n      }\r\n\r\n      handleIncrement = event => {\r\n          const {name} = event.target;\r\n          this.setState(prevState => {\r\n              return {\r\n                  [name]: prevState[name] + 1,\r\n              };\r\n          });\r\n      };\r\n\r\n    //   plusGood = () => {\r\n    //       this.setState(prevState => ({\r\n    //         good: prevState.good + 1,\r\n    //       }))\r\n    //   }\r\n\r\n    //   plusNeutral = () => {\r\n    //       this.setState(prevState => ({\r\n    //           neutral : prevState.neutral + 1,\r\n    //       }))\r\n    //   }\r\n\r\n    //   plusBad = () => {\r\n    //     this.setState(prevState => ({\r\n    //         bad : prevState.bad + 1,\r\n    //     }))\r\n    //   }\r\n\r\n      countTotalFeedback = () => {\r\n       return this.state.bad + this.state.good + this.state.neutral\r\n      }\r\n\r\n      positivePercentage = () => {\r\n        if(this.countTotalFeedback()) {\r\n            return (this.state.good / this.countTotalFeedback() * 100 ).toFixed()\r\n        } else {\r\n            return 0\r\n        }\r\n\r\n      };\r\n\r\n    render(){\r\n        return (\r\n          <div className={css.container}> \r\n            <Section title={'Please leave feedback'}>\r\n            <FeedbackOptions\r\n            options={Object.keys(this.state)}\r\n            handleIncrement={this.handleIncrement}\r\n          />\r\n          </ Section>\r\n\r\n            <Section title={'Statistics'}>\r\n            <Statistics\r\n            Good={this.state.good}\r\n            Neutral={this.state.neutral}\r\n            Bad={this.state.bad}\r\n            Total={this.countTotalFeedback()}\r\n            positivePercentage={this.positivePercentage()}\r\n            />\r\n            </ Section>\r\n          </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Feedback;","\nimport './App.css';\nimport Feedback from './components/Feedback/Feedback'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}